name: Build Windows

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  workflow_dispatch:
env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true

jobs:
  maui-windows:
    runs-on: windows-2022    
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3

      - name: Setup .NET
        uses: actions/setup-dotnet@607fce577a46308457984d59e4954e075820f10a # tag=v3
        with:
          dotnet-version: 7.0.x

      - name: Generate version number using date and run number
        shell: pwsh
        id: version-creator
        run: |
          $buildDay = Get-Date -Format "yyyy.Mdd"
          $ver = $buildDay + "." + $env:GITHUB_RUN_NUMBER + ".0"
          echo "APP_VERSION::$ver >> $env:GITHUB_OUTPUT"

      - name: Install Maui Workload
        run: dotnet workload install maui-windows
        
      - name: Build
        working-directory: .\src
        shell: pwsh
        run: |
          dotnet build -c Release -f net7.0-windows10.0.19041.0
          dotnet publish -c Release -f net7.0-windows10.0.19041.0
          New-Item -Path . -Name "artifacts" -ItemType Directory
          Get-ChildItem -Path Jellyfin.Maui*.msix -Recurse -File | Copy-Item -Destination .\artifacts\

      - name: Create signing pfx file from secrets
        shell: pwsh
        id: secret-file
        env:
          SECRET_DATA1: ${{ secrets.WIN_SIGN_CERT }}
        run: |
          $secretFile = "WinSignCert.pfx"; 
          $encodedBytes = [System.Convert]::FromBase64String($env:SECRET_DATA1); 
          Set-Content $secretFile -Value $encodedBytes -AsByteStream;
          Write-Output "SECRET_FILE::$secretFile >> $env:GITHUB_OUTPUT";
          Write-Output " ";
          Write-Output "CHECK FILE EXISTS";
          Write-Output " ";
          ls

      - name: Sign Windows App
        shell: pwsh
        env:
          CERT_PASSWORD: ${{ secrets.WIN_CERT_PASSWORD }}
        run: |
          '"C:\Program Files (x86)\Windows Kits\10\App Certification Kit\SignTool" sign /a /fd SHA256 /f WinSignCert.pfx /p ($env:CERT_PASSWORD) .\src\artifacts\Jellyfin.Maui*.msix'
      - uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # tag=v3
        with:
          name: windows-v${{ steps.version-creator.outputs.APP_VERSION }}-artifacts
          path: |             
            .\src\artifacts\Jellyfin.Maui*.msix
